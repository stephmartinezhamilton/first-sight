{"ast":null,"code":"var _jsxFileName = \"/Users/stephenmartinez-hamilton/first-sight/first-sight/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Navigation from './components/Navigation.tsx';\nimport CaseStudies from './pages/CaseStudies.tsx';\nimport AboutMe from './pages/AboutMe.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved dark mode preference\n    const savedDarkMode = localStorage.getItem('darkMode');\n    if (savedDarkMode) {\n      setDarkMode(JSON.parse(savedDarkMode));\n    }\n  }, []);\n  useEffect(() => {\n    // Save dark mode preference\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n    // Apply dark mode class to body\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `App ${darkMode ? 'dark-mode' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        darkMode: darkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/case-studies\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/case-studies\",\n            element: /*#__PURE__*/_jsxDEV(CaseStudies, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jxWvogfm97D9w3+yMzVp/epPJCw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Navigation","CaseStudies","AboutMe","jsxDEV","_jsxDEV","App","_s","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","JSON","parse","setItem","stringify","document","body","classList","add","remove","toggleDarkMode","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","_c","$RefreshReg$"],"sources":["/Users/stephenmartinez-hamilton/first-sight/first-sight/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Navigation from './components/Navigation.tsx';\nimport CaseStudies from './pages/CaseStudies.tsx';\nimport AboutMe from './pages/AboutMe.tsx';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Check for saved dark mode preference\n    const savedDarkMode = localStorage.getItem('darkMode');\n    if (savedDarkMode) {\n      setDarkMode(JSON.parse(savedDarkMode));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save dark mode preference\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n    // Apply dark mode class to body\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <Router>\n      <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n        <Navigation darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\n        <main>\n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/case-studies\" replace />} />\n            <Route path=\"/case-studies\" element={<CaseStudies />} />\n            <Route path=\"/about\" element={<AboutMe />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}